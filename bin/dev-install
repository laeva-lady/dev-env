#!/usr/bin/env bash

set -euo pipefail

# Ensure WORKSTATION is set
: "${WORKSTATION:?WORKSTATION must be set}"

SOURCE_CONFIG_DIR="$WORKSTATION/env/.config"
SOURCE_HOME_FILES="$WORKSTATION/env"
SOURCE_ROOT_DIR="$WORKSTATION/root"

DRY_RUN=false

# Parse optional arguments
if [[ "${1:-}" == "--dry-run" ]]; then
    DRY_RUN=true
    echo "[DRY RUN MODE ENABLED]"
fi

copy() {
    local src=$1 dst=$2
    if $DRY_RUN; then
        echo "Would copy: $src -> $dst"
    else
        cp -r "$src" "$dst"
    fi
}

copy_file() {
    local src=$1 dst=$2
    if $DRY_RUN; then
        echo "Would copy file: $src -> $dst"
    else
        cp "$src" "$dst"
    fi
}

copy_sudo() {
    local src=$1 dst=$2
    if $DRY_RUN; then
        echo "Would sudo copy: $src -> $dst"
    else
        sudo cp -rT "$src" "$dst"
    fi
}

copy_sudo_file() {
    local src=$1 dst=$2
    if $DRY_RUN; then
        echo "Would sudo copy file: $src -> $dst"
    else
        sudo cp "$src" "$dst"
    fi
}

chmod_sudo() {
    local mode=$1 file=$2
    if $DRY_RUN; then
        echo "Would sudo chmod $mode $file"
    else
        sudo chmod "$mode" "$file"
    fi
}

# Copy each config directory into ~/.config
echo "Copying config directories to ~/.config..."
find "$SOURCE_CONFIG_DIR" -mindepth 1 -maxdepth 1 -type d | while read -r config_dir; do
    copy "$config_dir" "$HOME/.config/"
done

# Copy each regular file in $WORKSTATION/env into ~
echo "Copying top-level dotfiles to ~..."
find "$SOURCE_HOME_FILES" -mindepth 1 -maxdepth 1 -type f | while read -r file; do
    copy_file "$file" "$HOME/"
done

# Copy system files from $WORKSTATION/root into /
echo "Copying system files to /"
copy_sudo "$SOURCE_ROOT_DIR/etc" /etc
copy_sudo "$SOURCE_ROOT_DIR/usr" /usr

# Copy sudoers if it exists
if [[ -f "$SOURCE_ROOT_DIR/etc/sudoers" ]]; then
    copy_sudo_file "$SOURCE_ROOT_DIR/etc/sudoers" /etc/sudoers
    chmod_sudo 440 /etc/sudoers
fi

echo "All operations completed${DRY_RUN:+ (dry run)}."
